-- Insert predefined roles into the role_master table
INSERT INTO role_master (role, active, created_by, updated_by)
VALUES 
    ('Intern', 1, 1, 1),
    ('Junior Software Engineer', 1, 1, 1),
    ('Software Engineer', 1, 1, 1),
    ('Senior Software Engineer', 1, 1, 1),
    ('Deputy Manager', 1, 1, 1),
    ('Assistant Manager', 1, 1, 1),
    ('HR Manager', 1, 1, 1),
    ('Accountant', 1, 1, 1),
    ('Marketing Specialist', 1, 1, 1),
    ('Operations Manager', 1, 1, 1);


-- Example insert statements for departments
INSERT INTO department_master (dept_name, active)
VALUES 
    ('IT', 1),
    ('Human Resources', 1),
    ('Finance', 1),
    ('Marketing', 1),
    ('Operations', 1);


INSERT INTO employees (name, department, designation, report_to, date_join, status)
VALUES
    ('John Doe', 1, 3, NULL, '2024-06-01', 1),
    ('Jane Smith', 2, 7, 1, '2023-12-15', 1),
    ('Michael Johnson', 3, 8, 1, '2024-01-10', 1),
    ('Emily Brown', 4, 9, 3, '2024-03-20', 1),
    ('David Wilson', 5, 10, 3, '2024-02-05', 1),
    ('Mayank', 1, 1, 3, '2024-07-08', 1);


INSERT INTO leave_masters (leave_type, days, status)
VALUES
    ('General', 20, 1),
    ('Emergency', 10, 1),
    ('Maternity Leave', 180, 1),
    ('Half Day',0,1),
    ('Short Leave',0,1);


INSERT INTO attendance_masters (employee_id, punch_in, punch_out, date)
VALUES
    -- Employee 1
    (1, '09:30:00', '18:30:00', '2024-06-20'),
    (1, '09:35:00', '18:35:00', '2024-06-19'),
    (1, '09:32:00', '18:31:00', '2024-06-18'),
    (1, '09:31:00', '18:32:00', '2024-06-17'),
    (1, '09:33:00', '18:34:00', '2024-06-16'),
    (1, '09:34:00', '18:33:00', '2024-06-15'),
    (1, '09:36:00', '18:36:00', '2024-06-14'),
    (1, '09:37:00', '18:37:00', '2024-06-13'),
    (1, '09:38:00', '18:38:00', '2024-06-12'),
    (1, '09:39:00', '18:39:00', '2024-06-11'),

    -- Employee 2
    (2, '09:30:00', '18:30:00', '2024-06-20'),
    (2, '09:25:00', '18:31:00', '2024-06-19'),
    (2, '09:28:00', '18:32:00', '2024-06-18'),
    (2, '09:29:00', '18:33:00', '2024-06-17'),
    (2, '09:31:00', '18:34:00', '2024-06-16'),
    (2, '09:33:00', '18:35:00', '2024-06-15'),
    (2, '09:34:00', '18:36:00', '2024-06-14'),
    (2, '09:36:00', '18:37:00', '2024-06-13'),
    (2, '09:37:00', '18:38:00', '2024-06-12'),
    (2, '09:38:00', '18:39:00', '2024-06-11'),

    -- Employee 3
    (3, '09:30:00', '18:30:00', '2024-06-20'),
    (3, '09:35:00', '18:35:00', '2024-06-19'),
    (3, '09:32:00', '18:31:00', '2024-06-18'),
    (3, '09:31:00', '18:32:00', '2024-06-17'),
    (3, '09:33:00', '18:34:00', '2024-06-16'),
    (3, '09:34:00', '18:33:00', '2024-06-15'),
    (3, '09:36:00', '18:36:00', '2024-06-14'),
    (3, '09:37:00', '18:37:00', '2024-06-13'),
    (3, '09:38:00', '18:38:00', '2024-06-12'),
    (3, '09:39:00', '18:39:00', '2024-06-11'),

    -- Employee 4
    (4, '09:30:00', '18:30:00', '2024-06-20'),
    (4, '09:25:00', '18:31:00', '2024-06-19'),
    (4, '09:28:00', '18:32:00', '2024-06-18'),
    (4, '09:29:00', '18:33:00', '2024-06-17'),
    (4, '09:31:00', '18:34:00', '2024-06-16'),
    (4, '09:33:00', '18:35:00', '2024-06-15'),
    (4, '09:34:00', '18:36:00', '2024-06-14'),
    (4, '09:36:00', '18:37:00', '2024-06-13'),
    (4, '09:37:00', '18:38:00', '2024-06-12'),
    (4, '09:38:00', '18:39:00', '2024-06-11'),

    -- Employee 5
    (5, '09:30:00', '18:30:00', '2024-06-20'),
    (5, '09:25:00', '18:31:00', '2024-06-19'),
    (5, '09:28:00', '18:32:00', '2024-06-18'),
    (5, '09:29:00', '18:33:00', '2024-06-17'),
    (5, '09:31:00', '18:34:00', '2024-06-16'),
    (5, '09:33:00', '18:35:00', '2024-06-15'),
    (5, '09:34:00', '18:36:00', '2024-06-14'),
    (5, '09:36:00', '18:37:00', '2024-06-13'),
    (5, '09:37:00', '18:38:00', '2024-06-12'),
    (5, '09:38:00', '18:39:00', '2024-06-11');

INSERT INTO attendance_masters (employee_id, punch_in, punch_out, date)
VALUES
    -- Employee 1
    (1, '09:30:00', '18:30:00', '2024-06-21'),

    -- Employee 2
    (2, '09:31:00', '18:35:00', '2024-06-21'),

    -- Employee 3
    (3, '10:35:00', '19:30:00', '2024-06-21'),

    -- Employee 4
    (4, '09:30:00', '18:30:00', '2024-06-21'),

    -- Employee 5
    (5, '15:00:00', '18:30:00', '2024-06-21'),

    -- Employee 1
    (1, '09:30:00', '18:30:00', '2024-07-02'),

    -- Employee 2
    (2, '09:31:00', '18:35:00', '2024-07-02'),

    -- Employee 3
    (3, '10:35:00', '19:30:00', '2024-07-02'),

    -- Employee 4
    (4, '09:30:00', '18:30:00', '2024-07-02'),

    -- Employee 5
    (5, '15:00:00', '18:30:00', '2024-07-02'),

    -- Employee 1
    (1, '09:35:00', '18:30:00', '2024-07-03'),

    -- Employee 2
    (2, '15:31:00', '18:35:00', '2024-07-03'),

    -- Employee 3
    (3, NULL, NULL, '2024-07-03'),

    -- Employee 4
    (4, '12:30:00', '18:30:00', '2024-07-03'),

    -- Employee 5
    (5, '09:00:00', '18:00:00', '2024-07-03'),


    -- Employee 1
    (1, '11:25:00', '18:30:00', '2024-06-10'),

    -- Employee 2
    (2, '09:25:00', '16:30:00', '2024-06-10'),

    -- Employee 3
    (3, '09:15:00', '18:40:00', '2024-06-10'),

    -- Employee 4
    (4, '09:10:00', '14:00:00', '2024-06-10'),

    -- Employee 5
    (5, '13:45:00', '18:30:00', '2024-06-10'),

    -- Employee 1
    (1, NULL, NULL, '2024-06-07'),

    -- Employee 2
    (2, '14:31:00', '18:35:00', '2024-06-07'),

    -- Employee 3
    (3, '14:10:00', '19:30:00', '2024-06-07'),

    -- Employee 4
    (4, '16:30:00', '18:30:00', '2024-06-07'),

    -- Employee 5
    (5, '08:15:00', '18:30:00', '2024-06-07');


-----------------------------------------------Attendance_Master Trigger-----------------------------------------------

-- Drop the trigger if it already exists (optional)
DROP TRIGGER IF EXISTS update_leave_balances;

-- Create a trigger to update leave_balances after inserting into attendance_masters
DELIMITER //

CREATE TRIGGER update_leave_balances
AFTER INSERT ON attendance_masters
FOR EACH ROW
BEGIN
    DECLARE present_date DATE;
    SET present_date = CURDATE();  -- Get the current date
    
    -- Attempt to update existing row, or insert new row if employee_id doesn't exist
    INSERT INTO leave_balances (employee_id, balance)
    VALUES (NEW.employee_id,
            20 - IFNULL(
                (
                    SELECT 
                        SUM(CASE 
                            WHEN punch_in <= '09:30:00' THEN 0
                            WHEN punch_in <= '10:30:00' THEN 0.25
                            WHEN punch_in <= '13:00:00' THEN 0.5
                            WHEN punch_in > '14:00:00' THEN 1
                            ELSE 
                                CASE 
                                    WHEN punch_in <= '09:30:00' AND punch_out >= '18:30:00' THEN 0
                                    WHEN punch_in > '09:30:00' AND punch_in <= '11:30:00' AND punch_out >= '18:30:00' THEN 0.5
                                    WHEN punch_in <= '09:31:00' AND punch_out >= '16:30:00' AND punch_out < '18:30:00' THEN 0.25
                                    WHEN TIME_TO_SEC(TIMEDIFF(punch_out, punch_in)) / 3600 >= 7 THEN 0.5
                                    WHEN TIME_TO_SEC(TIMEDIFF(punch_out, punch_in)) / 3600 >= 9 THEN 0
                                    WHEN punch_in <= '09:31:00' AND punch_out >= '14:00:00' AND punch_out <= '18:30:00' THEN 1
                                    WHEN punch_in > '09:30:00' AND punch_in <= '14:00:00' AND punch_out >= '18:30:00' THEN 1
                                    ELSE 1
                                END
                        END)
                    FROM attendance_masters
                    WHERE employee_id = NEW.employee_id
                    AND date >= DATE_SUB(present_date, INTERVAL 30 DAY)  -- Last 30 days from current date
                    AND date <= present_date  -- Current date as the end date
                ),
                0 -- Default deduction for absence
            )
    )
    ON DUPLICATE KEY UPDATE
        balance = VALUES(balance);  -- Update the balance to the new calculated value
END //

DELIMITER ;

-------------------------------------------Leave_Application_Master Trigger--------------------------------------------

DELIMITER //

CREATE TRIGGER update_leave_balances_on_approval
AFTER UPDATE ON leave_application_masters
FOR EACH ROW
BEGIN
    DECLARE days_difference INT;
    DECLARE leave_deduction FLOAT;

    -- Check if the status has changed from 1 to 0
    IF OLD.status = 1 AND NEW.status = 0 THEN
        -- Calculate the number of days between from_date and to_date
        SET days_difference = DATEDIFF(NEW.to_date, NEW.from_date) + 1;  -- +1 to include both from_date and to_date

        -- Determine the leave deduction based on the leave type and session
        IF NEW.session = 'Full day' THEN
            SET leave_deduction = days_difference * 1;
        ELSEIF NEW.session = '1st half' OR NEW.session = '2nd half' THEN
            SET leave_deduction = days_difference * 0.5;
        ELSE
            SET leave_deduction = 0;  -- Default to 0 if session type is not recognized
        END IF;

        -- Attempt to update the existing balance
        UPDATE leave_balances
        SET balance = balance - leave_deduction
        WHERE employee_id = NEW.employee_id;

        -- Handle the case where employee_id does not exist in leave_balances
        IF ROW_COUNT() = 0 THEN
            INSERT INTO leave_balances (employee_id, balance)
            VALUES (NEW.employee_id, 20 - leave_deduction);
        END IF;
    END IF;
END //

DELIMITER ;

---------------------------------------------Role Master & Department Master Table SQL Queries-------------------------


CREATE TABLE role_master (
    role_id INT AUTO_INCREMENT PRIMARY KEY,
    role VARCHAR(50) NOT NULL,
    active TINYINT(1) NOT NULL DEFAULT 1,
    created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT,
    updated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT,
    FOREIGN KEY (created_by) REFERENCES employees(employee_id),
    FOREIGN KEY (updated_by) REFERENCES employees(employee_id)
);

CREATE TABLE department_master (
    dept_id INT AUTO_INCREMENT PRIMARY KEY,
    dept_name VARCHAR(50) NOT NULL,
    active TINYINT(1) NOT NULL DEFAULT 1
);


--------------------------------------------------Rough Work----------------------------------------------------

{
    "employee_id": 1, // Ensure employee_id exists in employees table
    "from_date": "2024-07-10", // Validate as time format
    "to_date": "2024-07-20", // Validate as time format
    "leave_type": "Emergency",
    "remarks": "Demise of my friend from college",
    // "session": "1st Half",
    "status": 1
}

INSERT INTO `attendance_masters`(`employee_id`, `punch_in`, `punch_out`, `date`) VALUES
(6,'9:00:00]','19:00:00','2024-07-17');